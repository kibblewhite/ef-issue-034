// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ef_issue_034.Database;

#nullable disable

namespace ef_issue_034.Migrations
{
    [DbContext(typeof(IdentityDatabaseContext))]
    partial class IdentityDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("und-x-icu")
                .HasAnnotation("Npgsql:DefaultColumnCollation", "und-x-icu")
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ef_issue_034.Models.Business", b =>
                {
                    b.Property<Guid>("BusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .UseCollation("und-x-icu");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .UseCollation("und-x-icu");

                    b.HasKey("BusinessId");

                    b.HasIndex("BusinessId")
                        .IsUnique();

                    b.ToTable("Business", (string)null);
                });

            modelBuilder.Entity("ef_issue_034.Models.BusinessSubsidiary", b =>
                {
                    b.Property<Guid>("BusinessSubsidiaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SubsidiaryId")
                        .HasColumnType("uuid");

                    b.HasKey("BusinessSubsidiaryId");

                    b.HasIndex("BusinessId");

                    b.HasIndex("BusinessSubsidiaryId")
                        .IsUnique();

                    b.HasIndex("SubsidiaryId");

                    b.ToTable("BusinessSubsidiary", (string)null);
                });

            modelBuilder.Entity("ef_issue_034.Models.Subsidiary", b =>
                {
                    b.Property<Guid>("SubsidiaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .UseCollation("und-x-icu");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .UseCollation("und-x-icu");

                    b.HasKey("SubsidiaryId");

                    b.HasIndex("SubsidiaryId")
                        .IsUnique();

                    b.ToTable("Subsidiary", (string)null);
                });

            modelBuilder.Entity("ef_issue_034.Models.BusinessSubsidiary", b =>
                {
                    b.HasOne("ef_issue_034.Models.Business", "Business")
                        .WithMany("BusinessSubsidiaries")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ef_issue_034.Models.Subsidiary", "Subsidiary")
                        .WithMany("BuinessSubsidiaries")
                        .HasForeignKey("SubsidiaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Business");

                    b.Navigation("Subsidiary");
                });

            modelBuilder.Entity("ef_issue_034.Models.Business", b =>
                {
                    b.Navigation("BusinessSubsidiaries");
                });

            modelBuilder.Entity("ef_issue_034.Models.Subsidiary", b =>
                {
                    b.Navigation("BuinessSubsidiaries");
                });
#pragma warning restore 612, 618
        }
    }
}
